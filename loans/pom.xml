<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.afe</groupId>
    <artifactId>loans</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <!--  Packaging format on target folder	-->
    <packaging>jar</packaging>
    <name>loans</name>
    <description>loans</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <!-- We start to use MySql server on docker images -->
        <!--	http://localhost:8090/h2-console/	-->
<!--        <dependency>-->
<!--            <groupId>com.h2database</groupId>-->
<!--            <artifactId>h2</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- http://localhost:8090/swagger-ui/index.html	-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;  We prepare image name for using Buildpacks this auto generate image with below command &ndash;&gt;-->
<!--                    &lt;!&ndash;  mvn spring-boot:build-image	(your terminal path should be pom.xml path)&ndash;&gt;-->
<!--                    &lt;!&ndash;  docker images   (check image name alifurkan159/loans:l1) &ndash;&gt;-->
<!--                    &lt;!&ndash;  docker run -d -p 8090:8090 alifurkan159/loans:l1  &ndash;&gt;-->
<!--                    <image>-->
<!--                        <name>alifurkan159/${project.artifactId}:l1</name>-->
<!--                    </image>-->
<!--                    &lt;!&ndash;  docker image push docker.io/alifurkan159/loans:l1  (This command pushes the alifurkan159/loans:l1 image to the Docker Hub) &ndash;&gt;-->
<!--                    <excludes>-->
<!--                        <exclude>-->
<!--                            <groupId>org.projectlombok</groupId>-->
<!--                            <artifactId>lombok</artifactId>-->
<!--                        </exclude>-->
<!--                    </excludes>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <!-- Above maven plugin for BuildPacks(we commented all page) we changed it below with google jib maven plugin -->

            <!--  https://github.com/GoogleContainerTools/jib  -->
            <!--  Delete target folder first and check pom <packaging>jar</packaging> -->
            <!--  mvn compile jib:dockerBuild  (your terminal path should be pom.xml path) -->
            <!--  docker images   (check image name alifurkan159/cards:s7) -->
            <!--  docker run -d -p 9000:9000 alifurkan159/cards:s7  -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <to>
                        <image>alifurkan159/${project.artifactId}:s7</image>
                    </to>
                    <!--  docker image push docker.io/alifurkan159/cards:s7  (This command pushes the alifurkan159/cards:s7 image to the Docker Hub) -->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
